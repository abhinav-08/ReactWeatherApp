{"version":3,"sources":["logo.svg","Components/Navbar.js","Components/Intro.js","Components/WeatherCard.js","Components/WeatherInfo.js","Components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","class","href","Intro","WeatherCard","props","displayData","setState","min","minTemp","max","maxTemp","toggle","state","console","log","style","fontWeight","position","this","date","src","image","alt","margin","weatherType","onClick","Component","defaultProps","WeatherInfo","handleCityName","e","city","target","value","handleLimit","limit","getResults","a","preventDefault","fetch","response","json","data","forecast","forecastday","consolidatedData","i","temp","push","onSubmit","type","name","onChange","placeholder","map","day","condition","icon","text","mintemp_c","maxtemp_c","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3f323b7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react'\r\n\r\nexport default function Navbar() {\r\n    return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <i class=\"fas fa-sun\"></i><a className=\"navbar-brand\" href=\"#\">Weather Information App</a>\r\n    </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Intro() {\r\n    return (\r\n        <div>\r\n            <div className=\"jumbotron\">\r\n                <h1 className=\"display-6\">Welcome to this simple weather app</h1>\r\n                <p className=\"lead\">\r\n                Hey, This is a simple weather information app.<br/>\r\n                Enjoy!!!!!\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class WeatherCard extends Component {\r\n        constructor(props) {\r\n            super(props)\r\n            this.state={\r\n                min:0,\r\n                max:0,\r\n                toggle:0\r\n            }\r\n           \r\n        }\r\n        \r\n    displayData=()=>{\r\n            \r\n        \r\n            this.setState(\r\n                {\r\n                    min:this.props.minTemp,\r\n                    max:this.props.maxTemp,\r\n                    toggle:!this.state.toggle\r\n                }\r\n            )\r\n        \r\n            console.log(this.state.min+\" \"+this.state.max);      \r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card mx-3 my-3\">\r\n                    <div className=\"card-body\" >\r\n                        <h5 className=\"card-title mx-4\"><span style={{fontWeight:'bold',position:'center'}}>{this.props.date}</span></h5>\r\n                        <img className=\"card-img-top\" src={this.props.image} alt=\"Card image cap\"/>\r\n                       \r\n                        {/* <p className=\"card-text\" style={{fontWeight:'bold'}}>Max Temp : {this.props.maxTemp} C</p>\r\n                        <p className=\"card-text\" style={{fontWeight:'bold'}}>Min Temp : {this.props.minTemp} C</p>  */}\r\n                        <p className=\"card-text\"><span style={{fontWeight:'bold',margin:\"auto\"}}>{this.props.weatherType}</span></p>\r\n                        <button className=\"btn btn-primary\" onClick={this.displayData}>More Details</button>\r\n                        \r\n                        {\r\n                            this.state.min!==0&&this.state.max!==0&&this.state.toggle ?(\r\n                                <div>\r\n                                    <br/>\r\n                                    <p className=\"card-text\" style={{fontWeight:'bold'}}>Max Temp : {this.props.maxTemp} C</p>\r\n                                    <p className=\"card-text\" style={{fontWeight:'bold'}}>Max Temp : {this.props.maxTemp} C</p>\r\n                                </div>\r\n                            ):(\r\n                                <div>\r\n                                    <br/>\r\n                                    <p className=\"card-text\" style={{fontWeight:'bold'}}></p>\r\n                                    <p className=\"card-text\" style={{fontWeight:'bold'}}></p>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        )\r\n    }\r\n}\r\nWeatherCard.defaultProps={\r\n    date:\"NoDayProvided\",\r\n    weatherType :\"NoWeatherconditionProvided\",\r\n    minTemp:\"Can't Tell\",\r\n    maxTemp:\"Can't Tell\",\r\n};","import React, { useState,useEffect,Component } from 'react';\r\nimport WeatherCard from \"./WeatherCard\"\r\n\r\n\r\n//API Key: 8bab7abe7e1c4a6980c183741200711\r\n\r\nexport default class WeatherInfo extends Component { \r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            city:'',\r\n            consolidatedData:{},\r\n            limit:0,\r\n        }\r\n        this.data=null;\r\n        this.minTemp=null;\r\n        this.maxTemp=null;\r\n        this.weatherType=null;\r\n        this.temp=[];\r\n        // this.totalCards=null;\r\n    }   \r\n\r\n    handleCityName=(e)=>{\r\n        this.setState({\r\n            city:e.target.value\r\n        })            \r\n    }\r\n\r\n    handleLimit=(e)=>{\r\n        this.setState({\r\n            limit:e.target.value\r\n        })        \r\n    }\r\n    \r\n    getResults=async(e)=> {\r\n        e.preventDefault();\r\n        //console.log(\"http://api.weatherapi.com/v1/forecast.json?key=8bab7abe7e1c4a6980c183741200711&q=\"+this.state.city+\"&days=\"+this.state.limit);\r\n        const response = await fetch(\"http://api.weatherapi.com/v1/forecast.json?key=8bab7abe7e1c4a6980c183741200711&q=\"+this.state.city+\"&days=\"+this.state.limit);\r\n        this.data = await response.json();\r\n        console.log(this.data.forecast.forecastday);\r\n        console.log(this.state.consolidatedData);\r\n        this.setState({\r\n            consolidatedData:this.data.forecast.forecastday\r\n        });\r\n\r\n        console.log(\"data\"+this.state.consolidatedData);\r\n        console.log(\"API Data\"+this.data.forecast.forecastday);\r\n        for(var i=0;i<this.state.limit;i++)\r\n        {\r\n            this.temp.push(i);\r\n            //console.log(this.temp[i]);\r\n        }\r\n\r\n        // console.log(this.data.forecast.forecastday);\r\n        //console.log(this.state.consolidatedData);\r\n\r\n        //    this.totalCards=this.state.consolidatedData.map(\r\n        //    (value)=>{\r\n        //    <WeatherCard  weatherType=\"{val}\" minTemp={this.state.consolidatedData[1].day.mintemp_c} maxTemp={this.state.consolidatedData[1].day.maxtemp_c} date={this.state.consolidatedData[1].date}/>\r\n        //    })\r\n        \r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <section className=\"contact bg-success\">\r\n                <br/><br/>\r\n                    <div className=\"container\">\r\n                        <h2 className=\"text-white\">\r\n                            Please refer below to know the Weather Details \r\n                        </h2>\r\n                        <br/>\r\n                        <form className=\"form-inline\" onSubmit={(e)=>{this.getResults(e)}}>\r\n                            <div className=\"form-group\">\r\n                            <input type=\"text\"  className=\"form-control bg-light mx-3 my-5\" name=\"City\" onChange={this.handleCityName} placeholder=\"City\" />\r\n                            <input type=\"text\"  className=\"form-control bg-light mx-3 my-5\" name=\"Limit\" placeholder=\"No. of days\" onChange={this.handleLimit} />\r\n                            <input type=\"submit\" className=\"btn bg-primary\" value=\"Get Info\" />                         \r\n                            </div>\r\n                        </form>\r\n                        \r\n                        <div className=\"card-group\">\r\n                            {/* <div>{this.totalCards}</div> */}\r\n                            \r\n                            {\r\n                                this.temp.map((value)=>{\r\n                                   console.log(this.state.consolidatedData[value].day.condition.icon);\r\n                                    return( <WeatherCard  image={this.state.consolidatedData[value].day.condition.icon} weatherType={this.state.consolidatedData[value].day.condition.text} minTemp={this.state.consolidatedData[value].day.mintemp_c} maxTemp={this.state.consolidatedData[value].day.maxtemp_c} date={this.state.consolidatedData[value].date}/>\r\n                                )})\r\n                            }\r\n\r\n                           {/* <WeatherCard day=\"Monday\" weatherType=\"fds\" minTemp=\"dd\" maxTemp=\"ssdas\"/>\r\n                            <WeatherCard day=\"Monday\" weatherType=\"fds\" minTemp=\"dacd\" maxTemp=\"ssdas\"/>\r\n                            <WeatherCard day=\"Monday\" weatherType=\"fds\" minTemp=\"dac\" maxTemp=\"ssdas\"/>\r\n                           */}\r\n                        </div>\r\n                    </div>\r\n                    <br/><br/>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark sticky-bottom\">\r\n        <a className=\"navbar-brand\" href=\"https://www.linkedin.com/abhinav-08\">This Web app has been developed by Abhinav Tyagi</a>\r\n    </nav>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from \"./Components/Navbar\";\nimport Intro from \"./Components/Intro\";\nimport WeatherInfo from \"./Components/WeatherInfo\";\nimport footer from \"./Components/Footer\";\nimport Footer from './Components/Footer';\n\nfunction App() {\n  return (\n    <div>\n      <Navbar/>\n      <Intro/>\n      <WeatherInfo/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}